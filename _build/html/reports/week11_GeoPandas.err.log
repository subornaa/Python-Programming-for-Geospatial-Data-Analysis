Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# pip install folium

import geopandas as gpd
import pandas as pd
import numpy as np
import folium
from folium import plugins 
import matplotlib.pyplot as plt

# Load all required spatial datasets

gpdTrees = gpd.read_file('week11_data/street-trees.geojson')
gpdParks = gpd.read_file('week11_data/parks-polygon.geojson')
gpdParking = gpd.read_file('week11_data/disability-parking.geojson') 
gpdAreas = gpd.read_file('week11_data/local-area-boundary.geojson') # local areas

# Many file formats are supported (https://geopandas.org/en/stable/docs/user_guide/io.html)
# - Shapefiles
# - Zipped Shapefiles
# - GeoPackage database files
# - KML / KMZ
# - NO ESRI geodatabases!!
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mCPLE_OpenFailedError[0m                      Traceback (most recent call last)
[0;32mfiona/ogrext.pyx[0m in [0;36mfiona.ogrext.gdal_open_vector[0;34m()[0m

[0;32mfiona/_err.pyx[0m in [0;36mfiona._err.exc_wrap_pointer[0;34m()[0m

[0;31mCPLE_OpenFailedError[0m: week11_data/street-trees.geojson: No such file or directory

During handling of the above exception, another exception occurred:

[0;31mDriverError[0m                               Traceback (most recent call last)
[0;32m/var/folders/qt/qy37fy6s3c1553y2k74063pr0000gn/T/ipykernel_19844/3198774724.py[0m in [0;36m<module>[0;34m[0m
[1;32m     10[0m [0;31m# Load all required spatial datasets[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     11[0m [0;34m[0m[0m
[0;32m---> 12[0;31m [0mgpdTrees[0m [0;34m=[0m [0mgpd[0m[0;34m.[0m[0mread_file[0m[0;34m([0m[0;34m'week11_data/street-trees.geojson'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     13[0m [0mgpdParks[0m [0;34m=[0m [0mgpd[0m[0;34m.[0m[0mread_file[0m[0;34m([0m[0;34m'week11_data/parks-polygon.geojson'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m [0mgpdParking[0m [0;34m=[0m [0mgpd[0m[0;34m.[0m[0mread_file[0m[0;34m([0m[0;34m'week11_data/disability-parking.geojson'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/geopandas/io/file.py[0m in [0;36m_read_file[0;34m(filename, bbox, mask, rows, engine, **kwargs)[0m
[1;32m    257[0m [0;34m[0m[0m
[1;32m    258[0m     [0;32mif[0m [0mengine[0m [0;34m==[0m [0;34m"fiona"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 259[0;31m         return _read_file_fiona(
[0m[1;32m    260[0m             [0mpath_or_bytes[0m[0;34m,[0m [0mfrom_bytes[0m[0;34m,[0m [0mbbox[0m[0;34m=[0m[0mbbox[0m[0;34m,[0m [0mmask[0m[0;34m=[0m[0mmask[0m[0;34m,[0m [0mrows[0m[0;34m=[0m[0mrows[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m[0m[0;34m[0m[0m
[1;32m    261[0m         )

[0;32m/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/geopandas/io/file.py[0m in [0;36m_read_file_fiona[0;34m(path_or_bytes, from_bytes, bbox, mask, rows, where, **kwargs)[0m
[1;32m    301[0m [0;34m[0m[0m
[1;32m    302[0m     [0;32mwith[0m [0mfiona_env[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 303[0;31m         [0;32mwith[0m [0mreader[0m[0;34m([0m[0mpath_or_bytes[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m [0;32mas[0m [0mfeatures[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    304[0m             [0mcrs[0m [0;34m=[0m [0mfeatures[0m[0;34m.[0m[0mcrs_wkt[0m[0;34m[0m[0;34m[0m[0m
[1;32m    305[0m             [0;31m# attempt to get EPSG code[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/fiona/env.py[0m in [0;36mwrapper[0;34m(*args, **kwds)[0m
[1;32m    455[0m [0;34m[0m[0m
[1;32m    456[0m         [0;32mwith[0m [0menv_ctor[0m[0;34m([0m[0msession[0m[0;34m=[0m[0msession[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 457[0;31m             [0;32mreturn[0m [0mf[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwds[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    458[0m [0;34m[0m[0m
[1;32m    459[0m     [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/fiona/__init__.py[0m in [0;36mopen[0;34m(fp, mode, driver, schema, crs, encoding, layer, vfs, enabled_drivers, crs_wkt, allow_unsupported_drivers, **kwargs)[0m
[1;32m    334[0m [0;34m[0m[0m
[1;32m    335[0m         [0;32mif[0m [0mmode[0m [0;32min[0m [0;34m([0m[0;34m"a"[0m[0;34m,[0m [0;34m"r"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 336[0;31m             colxn = Collection(
[0m[1;32m    337[0m                 [0mpath[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    338[0m                 [0mmode[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/fiona/collection.py[0m in [0;36m__init__[0;34m(self, path, mode, driver, schema, crs, encoding, layer, vsi, archive, enabled_drivers, crs_wkt, ignore_fields, ignore_geometry, include_fields, wkt_version, allow_unsupported_drivers, **kwargs)[0m
[1;32m    241[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mmode[0m [0;34m==[0m [0;34m"r"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    242[0m                 [0mself[0m[0;34m.[0m[0msession[0m [0;34m=[0m [0mSession[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 243[0;31m                 [0mself[0m[0;34m.[0m[0msession[0m[0;34m.[0m[0mstart[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    244[0m             [0;32melif[0m [0mself[0m[0;34m.[0m[0mmode[0m [0;32min[0m [0;34m([0m[0;34m"a"[0m[0;34m,[0m [0;34m"w"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    245[0m                 [0mself[0m[0;34m.[0m[0msession[0m [0;34m=[0m [0mWritingSession[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32mfiona/ogrext.pyx[0m in [0;36mfiona.ogrext.Session.start[0;34m()[0m

[0;32mfiona/ogrext.pyx[0m in [0;36mfiona.ogrext.gdal_open_vector[0;34m()[0m

[0;31mDriverError[0m: week11_data/street-trees.geojson: No such file or directory
DriverError: week11_data/street-trees.geojson: No such file or directory

