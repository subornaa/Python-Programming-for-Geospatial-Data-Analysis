Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Create a subplot with 1 row and 2 columns (side-by-side plots)
fig, axes = plt.subplots(1, 2, figsize=(16, 6))

# Plot data and nearest neighbors for k=1 and k=3
for ax, k in zip(axes, [1, 3]):
    # Plot training data
    ax.scatter(class_0[:, 0], class_0[:, 1], marker='o', label='Training Class 0', s=100, color='blue')
    ax.scatter(class_1[:, 0], class_1[:, 1], marker='o', label='Training Class 1', s=100, color='red')
    
    # Using KNN to get nearest neighbors
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(train_data, train_labels)
    nearest_neighbors = knn.kneighbors(test_points, return_distance=False)
    
    # Plot test points and draw arrows to their nearest neighbors
    for i, test_point in enumerate(test_points):
        added_label = False # used to track whether a label for a test point has been added to the plot yet (for k=3)
        for neighbor_index in nearest_neighbors[i]:
            nearest_neighbor = train_data[neighbor_index]
            if not added_label:
                ax.scatter(test_point[0], test_point[1], marker='*', s=150, color='green', label=f'Test Point {i+1}')
                added_label = True
            else:
                ax.scatter(test_point[0], test_point[1], marker='*', s=150, color='green')
            ax.annotate(f'{i+1}', xy=nearest_neighbor, xytext=test_point, arrowprops=dict(facecolor='black', arrowstyle='->', lw=2))
    
    ax.set_title(f'K-Nearest Neighbors (k={k})')
    ax.legend(loc='upper right')
    ax.grid(True)

plt.tight_layout()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/qt/qy37fy6s3c1553y2k74063pr0000gn/T/ipykernel_17369/939069137.py[0m in [0;36m<module>[0;34m[0m
[1;32m      9[0m [0;34m[0m[0m
[1;32m     10[0m     [0;31m# Using KNN to get nearest neighbors[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 11[0;31m     [0mknn[0m [0;34m=[0m [0mKNeighborsClassifier[0m[0;34m([0m[0mn_neighbors[0m[0;34m=[0m[0mk[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     12[0m     [0mknn[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mtrain_data[0m[0;34m,[0m [0mtrain_labels[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     13[0m     [0mnearest_neighbors[0m [0;34m=[0m [0mknn[0m[0;34m.[0m[0mkneighbors[0m[0;34m([0m[0mtest_points[0m[0;34m,[0m [0mreturn_distance[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'KNeighborsClassifier' is not defined
NameError: name 'KNeighborsClassifier' is not defined

